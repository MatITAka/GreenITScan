# Stage 1: Build the Quasar application
FROM node:18-alpine AS build

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY quasar-project/package*.json ./

# Check if package.json exists
RUN if [ ! -f package.json ]; then echo "Error: package.json not found in quasar-project/"; exit 1; fi

# Validate package.json JSON syntax
RUN node -e "require('./package.json')" || { echo "Error: package.json is not valid JSON"; exit 1; }

# Remove postinstall script to avoid quasar prepare
RUN if grep -q '"postinstall"' package.json; then \
      node -e "const pkg = require('./package.json'); delete pkg.scripts.postinstall; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));" \
    ; fi

# Install dependencies with npm
RUN npm install

# Copy the rest of the Quasar project
COPY quasar-project/ .

# Verify Quasar project structure
RUN if [ ! -f quasar.config.js ]; then echo "Error: quasar.config.js not found, not a valid Quasar project"; exit 1; fi
RUN if [ ! -d src ]; then echo "Error: src/ directory not found, not a valid Quasar project"; exit 1; fi

# Build the Quasar application with npm
RUN npm run build

# Stage 2: Serve with Apache
FROM httpd:alpine

# Enable mod_rewrite for SPA routing
RUN sed -i 's/#LoadModule rewrite_module/LoadModule rewrite_module/' /usr/local/apache2/conf/httpd.conf

# Copy built files from the previous stage
COPY --from=build /app/dist/spa /usr/local/apache2/htdocs/

# Copy .htaccess for SPA routing
COPY docker/.htaccess /usr/local/apache2/htdocs/.htaccess

# Expose port 80
EXPOSE 80

# Start Apache in foreground
CMD ["httpd-foreground"]