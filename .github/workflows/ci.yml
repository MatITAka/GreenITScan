name: GreenItScan CI Pipeline

on:
  push:
    branches:
      - merge-test
  pull_request:
    branches:
      - merge-test

jobs:
  cypress-tests:
    runs-on: ubuntu-latest

    services:
      # Service Docker pour la base de données MariaDB
      database:
        image: mariadb:11.8.2
        env:
          MYSQL_ROOT_PASSWORD: "YourPassword123"
          MYSQL_DATABASE: "GreenITScan"
        ports:
          - "3307:3306"
        options: >-
          --health-cmd="bash -c '</dev/tcp/127.0.0.1/3306'"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    steps:
      # Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4

      # Configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.1' # Correspond à Dockerfile.frontend
          cache: 'npm'
          cache-dependency-path: |
            quasar-project/package-lock.json
            api-backend/composer.lock

      # Installer Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Démarrer les services frontend et backend avec docker-compose
      - name: Start Docker services
        run: |
          docker-compose -f docker-compose.yml up -d
          # Attendre que les services soient prêts
          npx wait-on http://localhost:9000 --timeout 120000
          npx wait-on http://localhost:8000/api/users/login --timeout 120000

      # Installer les dépendances dans quasar-project
      - name: Install quasar-project dependencies
        run: npm ci
        working-directory: ./quasar-project

      # Exécuter les tests E2E Cypress
      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          spec: quasar-project/cypress/e2e/resultats_page_spec.cy.js
          working-directory: ./quasar-project
          record: false # Activez avec CYPRESS_RECORD_KEY si nécessaire
        env:
          CYPRESS_BASE_URL: http://localhost:9000

      # Exécuter les tests de composants Cypress
      - name: Run Cypress component tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          component: true
          spec: quasar-ge2e/card_result_spec.cy.js
          working-directory: ./quasar-project
        env:
          CYPRESS_BASE_URL: http://localhost:9000

      # Téléverser les artefacts en cas d'échec
      - name: Upload Cypress artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            quasar-project/cypress/screenshots/
            quasar-project/cypress/videos/
          retention-days: 7

      # Arrêter les services Docker
      - name: Stop Docker services
        if: always()
        run: docker-compose -f docker-compose.yml down